#+TITLE: easyssh with tags
#+DATE: Thursday, Dec 22 2016
#+DESCRIPTION: sick of static configs
  
* Assumptions
  - aws configs{keys, regions} are exported well
  - you will help me clean/review it someday in future
    #+BEGIN_SRC bash
export AWS_ACCESS_KEY=my_aws_keys
export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY}"

export AWS_SECRET_KEY=my_dirty_secrets
export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_KEY}"

#region
export EC2_REGION="my_regions-1"
export AWS_REGION="${EC2_REGION}"
export EC2_URL="http://ec2.${EC2_REGION}.amazonaws.com"
    #+END_SRC
* Breakdown
*** Basic usage is like  
  #+BEGIN_SRC bash
./easyssh -h                            
Usage of ./easyssh:
  -custom_vpc_string="_vpc": custom vpc string/tag to append
  -end_msg="##END OF GENERATED SSH CONFIG##": custom comment end msg
  -port="22": ssh port to knock
  -start_msg="##START OF GENERATED SSH CONFIG##": custom comment msg at start of generated ssh config
  -username="ubuntu": ssh username to login as
  #+END_SRC

  where,
  - *-custom_vpc_string*: custom tag to put at tail of host to diff between vpc/no-vpc instances
  - *-end_msg & -start_msg* : custom msg to put at start and end of
    generated config, useful if you have multiple configs
  - *-username & -port* : self explainator; custom username and port
*** one more dependency
    For seamless ssh, bastion is used and the trick is:
  #+BEGIN_EXAMPLE
Host *_vpc !my_bastion_host*
  ProxyCommand ssh -W %h:%p my_bastion_host_vpc
  User ubuntu
  Port 7982
  ForwardAgent yes
#+END_EXAMPLE
  where,
  - *my_bastion_host** : my bastion host i use to ssh to vpc instances
  - *Host  *_vpc* : means every *Host* definitions tailed with :tag
    *_vpc* from: _-custom_vpc_string="_vpc": custom vpc string/tag to
    append_ and avoid the loop with *!my_bastion_host**

  So put/modify somewhere in your `~/.ssh/config`

* Bash Alternatives
#+BEGIN_QUOTE
too lazy to finish it in bash
#+END_QUOTE
  - pull tags 
    #+BEGIN_SRC bash :results drawer 
    source /tmp/my-aws.keys
    aws ec2 describe-instances
    #+END_SRC


  - pull tags with filters, little bit of assumptions don't hurt
    #+BEGIN_SRC bash :results drawer
    source /tmp/my-aws.keys
VPC_ID="my_vpc_id"
EC2_REGION="my_region-1"
aws ec2 describe-instances \
    --filters Name=vpc-id,Values=${VPC_ID} \
    --query 'Reservations[].Instances[].[PrivateIpAddress,InstanceId,Tags[?Key==`Name`].Value[]]' \
    --output text \
    --region "${EC2_REGION}" \
    | sed 's/None$/None\n/' | sed '$!N;s/\n/ /'
    #+END_SRC
  - parse the json
  - write the config file
  - build and share
